<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Anatolii Platonov</title><link>http://platonoff-dev.com/tags/testing/</link><description>Recent content in Testing on Anatolii Platonov</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Sat, 05 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://platonoff-dev.com/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Tests driven tests in go</title><link>http://platonoff-dev.com/test_driven_tests_in_go/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>http://platonoff-dev.com/test_driven_tests_in_go/</guid><description>Tests driven tests in go This trick is very useful if you are using TDD. From time to time there is a lot of duplication in our tests. For each test case only the input, the expected output, and name of test case change. Everything else is boilerplate. What wes&amp;rsquo;d like to set up all the inputs and expected outputs and feel them to a single test harness.</description></item></channel></rss>